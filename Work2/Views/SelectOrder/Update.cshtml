
@model Work2.Models.Order
@{
    ViewBag.Title = "Update";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div id="divValidator2">
    <table>
        <tr>
            <td>@Html.LabelFor(model => model.OrderID)</td>
            <td>@Html.TextBoxFor(model => model.OrderID, new { Readonly = true, @class = "form-control" })</td>
            <td>@Html.ValidationMessageFor(m => m.OrderID)</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.CustomerID)</td>
            <td>@Html.DropDownListFor(model => model.CustomerID, (List<SelectListItem>)ViewBag.customerlist, new { @class = "dropdownlist" })</td>

            <td>@Html.ValidationMessageFor(m => m.CustomerID)</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.EmployeeID)</td>
            <td>@Html.DropDownListFor(model => model.EmployeeID, (List<SelectListItem>)ViewBag.employeelist, new { @class = "dropdownlist" })</td>
            <td>@Html.ValidationMessageFor(m => m.EmployeeID)</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.OrderDate)</td>
            <td>@Html.TextBoxFor(model => model.OrderDate, new { Value = Model.OrderDate.HasValue ? Model.OrderDate.Value.ToString("yyyy-MM-dd") : "", type = "date", @class = "dateValidator " })</td>
            <td>@Html.ValidationMessageFor(m => m.OrderDate)</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.RequiredDate)</td>
            <td>@Html.TextBoxFor(model => model.RequiredDate, new { Value = Model.RequiredDate.HasValue ? Model.RequiredDate.Value.ToString("yyyy-MM-dd") : "", type = "date", @class = "dateValidator " })</td>
            <td>@Html.ValidationMessageFor(m => m.RequiredDate)</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.ShipperDate)</td>
            <td>@Html.TextBoxFor(model => model.ShipperDate, new { Value = Model.ShipperDate.HasValue ? Model.ShipperDate.Value.ToString("yyyy-MM-dd") : "", type = "date", @class = "dateValidator " })</td>
            <td>@Html.ValidationMessageFor(m => m.ShipperDate)</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.ShipperID)</td>
            <td>@Html.DropDownListFor(model => model.ShipperID, (List<SelectListItem>)ViewBag.shipperslist, new { @class = "dropdownlist" })</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.ShipName)</td>
            <td>@Html.DropDownListFor(model => model.ShipName, (List<SelectListItem>)ViewBag.shipperslist, new { @class = "dropdownlist" })</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.Freight)</td>
            <td>@Html.TextBoxFor(model => model.Freight, new { @class = "form-control" })</td>
            <td>@Html.ValidationMessageFor(m => m.Freight)</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.ShipCountry)</td>
            <td>@Html.TextBoxFor(model => model.ShipCountry, new { @class = "form-control" })</td>
            <td>@Html.ValidationMessageFor(m => m.ShipCountry)</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.ShipCity)</td>
            <td>@Html.TextBoxFor(model => model.ShipCity, new { @class = "form-control" })</td>
            <td>@Html.ValidationMessageFor(m => m.ShipCity)</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.ShipRegion)</td>
            <td>@Html.TextBoxFor(model => model.ShipRegion, new { @class = "form-control" })</td>
            <td>@Html.ValidationMessageFor(m => m.ShipRegion)</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.CitShipPostalCodey)</td>
            <td>@Html.TextBoxFor(model => model.CitShipPostalCodey, new { @class = "form-control" })</td>
            <td>@Html.ValidationMessageFor(m => m.CitShipPostalCodey)</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.ShipAddress)</td>
            <td>@Html.TextBoxFor(model => model.ShipAddress, new { @class = "form-control" })</td>
            <td>@Html.ValidationMessageFor(m => m.ShipAddress)</td>
        </tr>
    </table>
    <a class='k-button' id="save">存檔<span class='k-icon k-i-search'></span></a>
    <a class='k-button' id="delete">刪除本筆訂單</a>
    <a class='k-button' href="/SelectOrder/Index">回查詢頁</a>
</div>
<div id="detailtable"></div>




<script type="text/javascript">
    $(".dropdownlist").kendoDropDownList();
    $(".dateValidator").kendoDatePicker();
    $(document).ready(function () {
        var validator = $("#divValidator2").kendoValidator().data("kendoValidator");///基本驗證
        $("#save").click(function () {
            if (validator.validate()) {
                var displayedData = $("#detailtable").data().kendoGrid.dataSource.view();
                var detaildata = [];
                $.each(displayedData, function (id, a) {
                    //console.log(a.ProductID.Value);
                    //console.log(a.ProductID.Text);
                    detaildata.push({
                        'ProductID': [{ 'Value': a.ProductID.Value}],
                        'UnitPrice': a.UnitPrice,
                        'Qty': a.Qty
                    });
                });
                $.ajax({
                    type: 'Post',
                    url: '/SelectOrder/Update',
                    data: {
                        'OrderDetail': detaildata,
                        'OrderID': $("#OrderID").val(),
                        'CustomerID': $('#CustomerID').val(),
                        'EmployeeID': $('#EmployeeID').val(),
                        'OrderDate': $('#OrderDate').val(),
                        'RequiredDate': $('#RequiredDate').val(),
                        'ShipperDate': $('#ShipperDate').val(),
                        'ShipperID': $('#ShipperID').val(),
                        'Freight': $('#Freight').val(),
                        'ShipName': $('#ShipName').val(),
                        'ShipAddress': $('#ShipAddress').val(),
                        'ShipCity': $('#ShipCity').val(),
                        'ShipRegion': $('#ShipRegion').val(),
                        'CitShipPostalCodey': $('#CitShipPostalCodey').val(),
                        'ShipCountry': $('#ShipCountry').val(),
                    },
                    datatype: 'json',
                    success: function (response) {
                        alert(response);
                        window.location.href = '/SelectOrder/Index';
                        
                    }, error: function (error) {

                    }
                });
            }

            /*
            alert("功能未寫");
            return false;
            */
        });


        $("#delete").click(function () {
            $.ajax({
                type: 'Post',
                url: '/SelectOrder/Del',
                data: { 'OrderID': $('#OrderID').val() },
                datatype: 'json',
                success: function (response) {
                    alert(response);
                    window.location.href = '/SelectOrder/Index';
                },
                error: function (error) {

                }
            });

        });

        var Orderdetail = @Html.Raw(Json.Encode(Model.OrderDetail));
        //console.log(Orderdetail);
        var data = [];
        $.each(Orderdetail, function (id, a) {
            //console.log(a);
            data.push({
                'ProductID': { 'Value': a.ProductID[0].Value, 'Text': a.ProductID[0].Text },
                'UnitPrice': a.UnitPrice,
                'Qty': a.Qty,
                'Total': a.UnitPrice * a.Qty
            });
        });

        var dataSrc = new kendo.data.DataSource({
            data: data,
            schema: {
                model: {
                    fields: {
                        ProductID: {
                            defaultValue: { 'Value': 58, 'Text': "Product ACRVI" },
                            validation: {
                                required: true,
                                productvalidation: function (input) {
                                    input.attr("data-productvalidation-msg", "商品重複");
                                    if (input.is("[name='ProductID']") && input.val() != "") {
                                        var displayedData = $("#detailtable").data().kendoGrid.dataSource.view();
                                        var checked = true;

                                        $.each(displayedData, function (id, a) {
                                            if (id != 0 && input.val() == a.ProductID.Value) {
                                                checked = false;
                                            }
                                        });
                                        return checked;
                                        //console.log(displayedData[0].ProductID.Value);
                                    }
                                    return true;
                                }

                            }
                        },
                        UnitPrice: { type: "number", editable: false, defaultValue: 13.25},
                        Qty: { type: "number", validation: { required: true, min: 1 }, defaultValue: 1},
                        Total: { type: "number", editable: false}
                    }
                }
            },
            aggregate:
                [
                    { field: "Total", aggregate: "Sum" }
                ],
            change: GetPrice,
            pageSize: 10,
        });
        $("#detailtable").kendoGrid({
            dataSource: dataSrc,

            pageable: true,
            scrollable: true,
            sortable: true,
            selectable: true,
            filterable: true,
            toolbar: ["create"],
            columns: [
                { field: "ProductID", title: "商品", editor: categoryDropDownEditor, template: "#=ProductID.Text#" },
                { field: "UnitPrice", title: "單價" },
                { field: "Qty", title: "數量" },
                { field: "Total", title: "小計", template: "#=kendo.toString(UnitPrice*Qty)#", aggregate: ["Sum"], footerTemplate: "總計:" + "#=kendo.toString(Sum,'C0')#" },
                { command: "destroy", title: " " }],
            editable: true
        });
        function categoryDropDownEditor(container, options) {
            $('<input required name="' + options.field + '"/>').appendTo(container).kendoDropDownList({
                autoBind: false,
                dataTextField: "Text",
                dataValueField: "Value",
                dataSource: {
                    transport: {
                        read: {
                            type: "GET",
                            url: "/SelectOrder/InsertProduct",
                            dataType: "json"
                        }
                    }
                }
            });
        }
        function GetPrice(e) {
            console.log(e.field);
            if (e.field == "ProductID") { //當產品被選擇時
                //console.log(e.items[0].ProductID.Value);
                var model = e.items[0];
                var temp;
                $.ajax({
                    type: "POST",
                    data: { 'arg': e.items[0].ProductID.Value }, //arg = 產品的ID
                    dataType: 'json',
                    url: '/SelectOrder/GetPrice', 
                    success: function (response) {
                        temp = response;
                        if (temp !== model.UnitPrice) {
                            model.UnitPrice = temp
                            model.Total = temp * e.items[0].Qty; //計算總金額
                            $("#detailtable").find("tr[data-uid='" + model.uid + "'] td:eq(1)").text(temp); //在網頁上找到位置並放上值(價格)
                            $("#detailtable").find("tr[data-uid='" + model.uid + "'] td:eq(3)").text(model.Total);//在網頁上找到位置並放上值(總金額)
                            $("#detailtable").data('kendoGrid').refresh();
                            dataSrc.sync();
                        }
                    },
                    error: function (result) {
                        console.log("失敗");
                    }
                });
            } else if (e.field == "Qty") { //當數量被觸及時
                var model = e.items[0];
                var temp;
                if (temp !== model.Total) {
                    temp = Math.round(e.items[0].UnitPrice * e.items[0].Qty); //計算總金額
                    model.Total = temp;
                    $("#detailtable").find("tr[data-uid='" + model.uid + "'] td:eq(3)").text(temp); // 找到網頁上位置並給值
                    $("#detailtable").data('kendoGrid').refresh();
                    dataSrc.sync();
                }
            }
        }

        $(".dateValidator").kendoValidator({ //kundo 驗證
            rules: {
                customRule1: function (input) {
                    if (input.is("[name='RequiredDate']") && $("[name='RequiredDate']").val() != "" && $("[name='OrderDate']").val() != "") {
                        var RequiredDate = kendo.parseDate($("[name='RequiredDate']").val());
                        var OrderDate = kendo.parseDate($("[name='OrderDate']").val());
                        return OrderDate.getTime() < RequiredDate.getTime();
                    }
                    return true;
                },
                customRule2: function (input) {
                    if (input.is("[name='ShipperDate']") && $("[name='ShipperDate']").val() != "" && $("[name='OrderDate']").val() != "") {
                        var ShipperDate = kendo.parseDate($("[name='ShipperDate']").val());
                        var OrderDate = kendo.parseDate($("[name='OrderDate']").val());
                        return OrderDate.getTime() < ShipperDate.getTime();
                    }
                    return true;
                },
                customRule3: function (input) {
                    if (input.is("[name='OrderDate']") && $("[name='OrderDate']").val() != "" && $("[name='ShipperDate']").val() != "" && $("[name='RequiredDate']").val() != "") {
                        var ShipperDate = kendo.parseDate($("[name='ShipperDate']").val());
                        var RequiredDate = kendo.parseDate($("[name='RequiredDate']").val());
                        var OrderDate = kendo.parseDate($("[name='OrderDate']").val());
                        return OrderDate.getTime() < RequiredDate.getTime() || OrderDate.getTime() < ShipperDate.getTime();
                    }
                    return true;
                },
                customRule4: function (input) {
                    if ((input.is("[name='ShipperDate']") || input.is("[name='RequiredDate']")) && $("[name='ShipperDate']").val() != "" && $("[name='RequiredDate']").val() != "") {
                        var ShipperDate = kendo.parseDate($("[name='ShipperDate']").val());
                        var RequiredDate = kendo.parseDate($("[name='RequiredDate']").val());
                        return RequiredDate.getTime() > ShipperDate.getTime();
                    }
                    return true;
                }

            },

            messages: {
                customRule1: "需要日期必須大於訂單日期",
                customRule2: "發貨日期必須大於訂單日期",
                customRule3: "訂單日期必須小於需要和發貨日期",
                customRule4: "需要日期必須大於發貨日期"
            }

        });

    });

</script>