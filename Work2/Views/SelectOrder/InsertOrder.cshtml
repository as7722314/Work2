
@model Work2.Models.Order
@{
    ViewBag.Title = "InsertOrder";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="divValidator">
    <table>
        <tr>
            <td>@Html.LabelFor(model => model.CustomerID)</td>
            <td>@Html.DropDownListFor(model => model.CustomerID, (List<SelectListItem>)ViewBag.customerlist, "請選擇...", new { @class = "dropdownlist ", required = "required" })</td>
            <td>@Html.ValidationMessageFor(m => m.CustomerID)</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.EmployeeID)</td>
            <td>@Html.DropDownListFor(model => model.EmployeeID, (List<SelectListItem>)ViewBag.employeelist, "請選擇...", new { @class = "dropdownlist ", required = "required" })</td>
            <td>@Html.ValidationMessageFor(m => m.EmployeeID)</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.OrderDate)</td>
            <td>@Html.TextBoxFor(model => model.OrderDate, new { @type = "date", @class = "dateValidator ", required = "required" })</td>
            <td>@Html.ValidationMessageFor(m => m.OrderDate)</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.RequiredDate)</td>
            <td>@Html.TextBoxFor(model => model.RequiredDate, new { @type = "date", @class = "dateValidator", required = "required" })</td>
            <td>@Html.ValidationMessageFor(m => m.RequiredDate)</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.ShipperDate)</td>
            <td>@Html.TextBoxFor(model => model.ShipperDate, new { @type = "date", @class = "dateValidator", required = "required" })</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.ShipperID)</td>
            <td>@Html.DropDownListFor(model => model.ShipperID, (List<SelectListItem>)ViewBag.shipperlist, "請選擇...", new { @class = "dropdownlist ", required = "required" })</td>
            <td>@Html.ValidationMessageFor(m => m.ShipperID)</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.ShipName)</td>
            <td>@Html.TextBoxFor(model => model.ShipName, new { @class = "k-textbox", required = "required" })</td>
            <td>@Html.ValidationMessageFor(m => m.ShipName)</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.Freight)</td>
            <td>@Html.TextBoxFor(model => model.Freight, new { type = "number", @class = "form-control", required = "required" })</td>
            <td>@Html.ValidationMessageFor(m => m.Freight)</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.ShipCountry)</td>
            <td>@Html.TextBoxFor(model => model.ShipCountry, new { @class = "k-textbox", required = "required" })</td>
            <td>@Html.ValidationMessageFor(m => m.ShipCountry)</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.ShipCity)</td>
            <td>@Html.TextBoxFor(model => model.ShipCity, new { @class = "k-textbox", required = "required" })</td>
            <td>@Html.ValidationMessageFor(m => m.ShipCity)</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.ShipRegion)</td>
            <td>@Html.TextBoxFor(model => model.ShipRegion, new { @class = "k-textbox" })</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.CitShipPostalCodey)</td>
            <td>@Html.TextBoxFor(model => model.CitShipPostalCodey, new { @class = "form-control" })</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.ShipAddress)</td>
            <td>@Html.TextBoxFor(model => model.ShipAddress, new { @class = "form-control", required = "required" })</td>
            <td>@Html.ValidationMessageFor(m => m.ShipAddress)</td>
        </tr>
    </table>
    <input type="submit" value="存檔" />
    <button onclick="location.href='@Url.Action("Index", "SelectOrder")';return false;">回上一頁</button>
    <h3>訂單明細:</h3>
    <div id="detailgrid"></div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $("#dropdownlist").kendoDropDownList();        
        $(".dateValidator").kendoDatePicker();      
        var validator = $("#divValidator").kendoValidator().data("kendoValidator");///基本驗證

        var dataSrc = new kendo.data.DataSource({
            schema: {
                model: {
                    fields: {
                        ProductID: { defaultValue: { 'Value': "", 'Text': "請選擇" } },
                        UnitPrice: { type: "number", editable: false },
                        Qty: { type: "number" },
                        Total: { type: "number", editable: false },
                    }
                }
            },
            aggregate:
                [
                    { field: "Total", aggregate: "Sum" }
                ],
            change: GetPrice,
            pageSize: 10,
        });

        $("#detailgrid").kendoGrid({
            dataSource: dataSrc,
            pageable: true,

            toolbar: ["create"],
            columns: [
                { field: "ProductID", title: "商品", width: "180px", editor: categoryDropDownEditor, template: "#=ProductID.Text#" },
                { field: "UnitPrice", title: "單價", width: "100px" },
                { field: "Qty", title: "數量", width: "100px" },
                { field: "Total", title: "小計", width: "100px", template: "#=kendo.toString(UnitPrice*Qty,'C0')#", aggregates: ["Sum"], footerTemplate: "總計:" + "#=kendo.toString(Sum,'C0')#" },
                { command: "destroy", title: " ", width: "100px" }],
            editable: true
        });
        function categoryDropDownEditor(container, options) {
            $('<input required name="' + options.field + '"/>').appendTo(container).kendoDropDownList({
                autoBind: false,
                dataTextField: "Text",
                dataValueField: "Value",
                dataSource: {
                    transport: {
                        read: {
                            type: "GET",
                            url: "/SelectOrder/InsertProduct",
                            dataType: "json"
                        }
                    }
                }
            });
        }
        function GetPrice(e) {
            //console.log(e.action);
            //var id = e.items[0].ProductID.Value;
            /*console.log(e.action);
            if (e.action == 'add') {
                var model = e.items[0];
                var temp;
                temp = e.items[0].UnitPrice * e.items[0].Qty;
                model.Total = temp;
                //$("#detailgrid").find("tr[data-uid='" + model.uid + "'] td:eq(3)").text(temp);
                $("#detailgrid").data('kendoGrid').refresh();
                dataSrc.sync();
            }
            else */
            if (e.field == "ProductID") {
                var model = e.items[0];
                var temp;
                $.ajax({
                    type: "POST",
                    data: { 'arg': e.items[0].ProductID.Value },
                    dataType: 'json',
                    url: '/SelectOrder/GetPrice',
                    success: function (response) {
                        temp = response;
                        if (temp !== model.UnitPrice) {
                            model.UnitPrice = temp
                            model.Total = temp * e.items[0].Qty;
                            $("#detailgrid").find("tr[data-uid='" + model.uid + "'] td:eq(1)").text(temp);
                            $("#detailgrid").find("tr[data-uid='" + model.uid + "'] td:eq(3)").text(model.Total);
                            $("#detailgrid").data('kendoGrid').refresh();
                            dataSrc.sync();
                        }
                    },
                    error: function (result) {
                        console.log("失敗");
                    }
                });
            } else if (e.field == "Qty") {
                var model = e.items[0];
                var temp;
                if (temp !== model.Total) {
                    temp = Math.round(e.items[0].UnitPrice * e.items[0].Qty);
                    model.Total = temp;
                    $("#detailgrid").find("tr[data-uid='" + model.uid + "'] td:eq(3)").text(temp);
                    $("#detailgrid").data('kendoGrid').refresh();
                    dataSrc.sync();
                }
            }
        }
        

        $(".dateValidator").kendoValidator({
            rules: {
                customRule1: function (input) {
                    if (input.is("[name='RequiredDate']")) {
                        var RequiredDate = kendo.parseDate($("[name='RequiredDate']").val());                        
                        var OrderDate = kendo.parseDate($("[name='OrderDate']").val());                        
                        return OrderDate.getTime() < RequiredDate.getTime();
                    }
                    return true; 
                },
                customRule2: function (input) {
                    if (input.is("[name='ShipperDate']")) {
                        var RequiredDate = kendo.parseDate($("[name='ShipperDate']").val());                        
                        var OrderDate = kendo.parseDate($("[name='OrderDate']").val());                        
                        return OrderDate.getTime() < RequiredDate.getTime();
                    }
                    return true; 
                }               

            },

            messages: {
                customRule1: "訂單日期必須小於需要日期",
                customRule2: "訂單日期必須小於發貨日期"
            }

        });


    });
</script>

